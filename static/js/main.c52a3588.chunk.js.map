{"version":3,"sources":["game/command.ts","components/board/cell/CellC.tsx","game/random.ts","game/color.ts","game/lib/matrix.ts","game/mino.ts","game/shape.ts","game/rotation.ts","game/CurrentMino.ts","game/game.ts","gameState.ts","components/board/Board.tsx","components/rotation-keys/RotationKeys.tsx","hooks/useCommandPressed.ts","hooks/useLongPress.ts","components/cross-keys/CrossKeys.tsx","components/Layout.tsx","App.tsx","hooks/useKeyDown.ts","reportWebVitals.ts","index.tsx"],"names":["Command","CellC","color","className","Color","Random","seed","prng","this","seedrandom","toString","max","Math","abs","int32","next","isFilled","row","includes","None","MinoType","rotateMatrix90","a","map","_","c","r","reverse","rotateMatrix180","Shape","positions","rightCol","p","col","leftCol","min","bottomRow","matrix","flatMap","bs","irow","b","icol","position","filter","Rotation","d","fromMatrix","Direction","rotations","i","o","t","s","z","l","j","Mino","minoType","rotation","direction","A","B","C","D","Error","minoFactory","I","LightBlue","O","Yellow","T","Purple","S","Green","Z","Red","L","Orange","J","Blue","random","floor","createMinoSets","ar","result","length","k","shuffle","CurrentMino","mino","getShape","move","rows","undefined","cellPositions","find","Game","currentMino","nextMinos","cell","ghost","drop","forEach","LightBlueGhost","YellowGhost","PurpleGhost","GreenGhost","RedGhost","OrangeGhost","BlueGhost","command","Up","state","clearedRows","clearRows","ncol","slice","nextRandom","Right","updateCurrentMino","moveRight","Down","moveDown","Left","moveLeft","RotationLeft","rotationLeft","RotationRight","rotationRight","nextMino","collided","nrow","m","copy","clearingAmount","remainedRows","emptyRows","Array","fill","createEmptyRow","minoSets","game","atom","key","default","create","boardSelector","selector","get","style","board","css","border","display","Board","useRecoilValue","index","RotationKeys","setGame","useSetRecoilState","type","onClick","input","useCommandPressed","useState","pressed","setPressed","intervalRef","useRef","timeoutRef","useEffect","current","setTimeout","setInterval","clearInterval","clearTimeout","useLongPressMobile","useCallback","target","addEventListener","e","preventDefault","passive","CrossKeysDesktop","setDownPressed","setLeftPressed","setRightPressed","onMouseDown","onMouseUp","CrossKeysMobile","downRef","leftRef","rightRef","ref","CrossKeys","isDesktop","useMediaQuery","query","isMobile","controller","crossKeys","width","Layout","App","keyFs","f","document","keyF","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c52a3588.chunk.js","sourcesContent":["export enum Command {\n    Up,\n    Right,\n    Down,\n    Left,\n    RotationLeft,\n    RotationRight,\n}\n","import React from 'react';\nimport './Cell.scss';\nimport {Color} from \"../../../game/color\";\n\ntype CellProps = {\n    color: Color\n}\n\nexport default function CellC({ color }: CellProps) {\n    return (\n        <div className={`cell cell--${color}`}>\n\n        </div>\n    )\n}\n","import seedrandom from \"seedrandom\";\n\nexport function getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n}\n\nexport class Random {\n\n    private prng: PRNG\n\n    constructor(readonly seed: number) {\n        this.prng = seedrandom(seed.toString())\n    }\n\n    public next(max: number): number {\n        return Math.abs(this.prng.int32()) % (max + 1)\n    }\n\n    public nextRandom(): Random {\n        return new Random(this.next(1000000))\n    }\n}\n\n// FIXME random に対して副作用がある\nexport function shuffle<T>(ar: T[], random: Random): T[] {\n    let result = [...ar]\n\n    for (let i = result.length; 1 < i; i--) {\n        const k = random.next(result.length - 1) as number\n        [result[k], result[i - 1]] = [result[i - 1], result[k]]\n    }\n\n    return result\n}\n\ninterface PRNG {\n    (): number;\n    double(): number;\n    int32(): number;\n    quick(): number;\n    state(): seedrandom.State;\n}\n","export enum Color {\n    None = 'none',\n\n    LightBlue = 'lightBlue',\n    Yellow = 'yellow',\n    Purple = 'purple',\n    Green = 'green',\n    Red = 'red',\n    Orange = 'orange',\n    Blue = 'blue',\n\n    LightBlueGhost = 'lightBlue--ghost',\n    YellowGhost = 'yellow--ghost',\n    PurpleGhost = 'purple--ghost',\n    GreenGhost = 'green--ghost',\n    RedGhost = 'red--ghost',\n    OrangeGhost = 'orange--ghost',\n    BlueGhost = 'blue--ghost',\n}\n\nexport function toGhost(color: Color): Color {\n    if (color === Color.LightBlue) {\n        return Color.LightBlueGhost\n    } else if (color === Color.Yellow) {\n        return Color.YellowGhost\n    } else if (color === Color.Purple) {\n        return Color.PurpleGhost\n    } else if (color === Color.Green) {\n        return Color.GreenGhost\n    } else if (color === Color.Red){\n        return Color.RedGhost\n    } else if (color === Color.Orange) {\n        return Color.OrangeGhost\n    } else if (color === Color.Blue) {\n        return Color.BlueGhost\n    }\n\n    return Color.None\n}\n\nexport type Cell = Color\n\nexport type Row = Cell[]\n\nexport function isFilled(row: Row): boolean {\n    return !row.includes(Color.None)\n}\n\nexport function createEmptyRow(ncol: number): Row {\n    return Array(ncol).fill(Color.None)\n}\n","export const rotateMatrixLeft = (a: boolean[][]): boolean[][] => a[0].map((_, c) => a.map(r => r[c])).reverse();\nexport const rotateMatrix90 = <T>(a: T[][]): T[][] => a[0].map((_, c) => a.map(r => r[c]).reverse());\nexport const rotateMatrix180 = <T>(a: T[][]): T[][] => rotateMatrix90(rotateMatrix90(a))\nexport const rotateMatrix270 = <T>(a: T[][]): T[][] => rotateMatrix180(rotateMatrix90(a))\n","import {getRandomInt, Random, shuffle} from \"./random\";\nimport {Color} from \"./color\";\nimport {Rotation} from \"./rotation\";\nimport {Shape} from \"./shape\";\n\nenum MinoType {\n    I,\n    O,\n    T,\n    S,\n    Z,\n    L,\n    J,\n}\n\nconst rotations = {\n    i: Rotation.fromMatrix([\n        [false, false, false, false],\n        [true, true, true, true],\n        [false, false, false, false],\n        [false, false, false, false],\n    ]),\n    o: Rotation.fromMatrix([\n        [true, true],\n        [true, true],\n    ]),\n    t: Rotation.fromMatrix([\n        [false, true, false],\n        [true, true, true],\n        [false, false, false],\n    ]),\n    s: Rotation.fromMatrix([\n        [false, true, true],\n        [true, true, false],\n        [false, false, false],\n    ]),\n    z: Rotation.fromMatrix([\n        [true, true, false],\n        [false, true, true],\n        [false, false, false],\n    ]),\n    l: Rotation.fromMatrix([\n        [false, false, true],\n        [true, true, true],\n        [false, false, false],\n    ]),\n    j: Rotation.fromMatrix([\n        [true, false, false],\n        [true, true, true],\n        [false, false, false],\n    ]),\n}\n\nexport enum Direction {\n    A,\n    B,\n    C,\n    D\n}\n\nexport class Mino {\n\n    constructor(\n        readonly minoType: MinoType,\n        readonly rotation: Rotation,\n        readonly color: Color,\n    ) {}\n\n    public getShape(direction: Direction): Shape {\n        if (direction === Direction.A) {\n            return this.rotation.a\n        } else if (direction === Direction.B) {\n            return this.rotation.b\n        } else if (direction === Direction.C) {\n            return this.rotation.c\n        } else if (direction === Direction.D) {\n            return this.rotation.d\n        }\n        throw Error(\"no direction found\")\n    }\n}\n\nexport const minoFactory = {\n    i(): Mino {\n        return new Mino(\n            MinoType.I,\n            rotations.i,\n            Color.LightBlue,\n        )\n    },\n    o(): Mino {\n        return new Mino(\n            MinoType.O,\n            rotations.o,\n            Color.Yellow,\n        )\n    },\n    t(): Mino {\n        return new Mino(\n            MinoType.T,\n            rotations.t,\n            Color.Purple,\n        )\n    },\n    s(): Mino {\n        return new Mino(\n            MinoType.S,\n            rotations.s,\n            Color.Green,\n        )\n    },\n    z(): Mino {\n        return new Mino(\n            MinoType.Z,\n            rotations.z,\n            Color.Red,\n        )\n    },\n    l(): Mino {\n        return new Mino(\n            MinoType.L,\n            rotations.l,\n            Color.Orange,\n        )\n    },\n    j(): Mino {\n        return new Mino(\n            MinoType.J,\n            rotations.j,\n            Color.Blue,\n        )\n    },\n    random(): Mino {\n        const rand =　getRandomInt(7)\n        switch (rand) {\n            case 0: return this.i()\n            case 1: return this.o()\n            case 2: return this.t()\n            case 3: return this.s()\n            case 4: return this.z()\n            case 5: return this.l()\n            case 6: return this.j()\n            default: throw Error(\"failed to create random mino\")\n        }\n    },\n    createMinoSets(random: Random): Mino[] {\n        const ar = [\n            this.l(),\n            this.s(),\n            this.i(),\n            this.j(),\n            this.z(),\n            this.o(),\n            this.t()\n        ]\n        return shuffle(ar, random)\n    }\n}\n","import {Position} from \"./potision\";\n\nexport class Shape {\n    constructor(\n        readonly positions: Position[]\n    ) {\n    }\n\n    rightCol = (): number => Math.max(...this.positions.map(p => p.col))\n\n    leftCol = (): number => Math.min(...this.positions.map(p => p.col))\n\n    bottomRow = (): number => Math.max(...this.positions.map(p => p.row))\n\n    public static fromMatrix(matrix: boolean[][]): Shape {\n        return new Shape(\n            matrix.flatMap((bs, irow) => {\n                return bs.map((b, icol) => {\n                    return {b: b, position: {row: irow, col: icol}}\n                }).filter(b => b.b)\n            }).map(bs => bs.position)\n        )\n    }\n}\n","import {rotateMatrix180, rotateMatrix270, rotateMatrix90} from \"./lib/matrix\";\nimport {Shape} from \"./shape\";\n\nexport class Rotation {\n    constructor(\n        readonly a: Shape,\n        readonly b: Shape,\n        readonly c: Shape,\n        readonly d: Shape,\n    ) {\n    }\n\n    public static fromMatrix(matrix: boolean[][]): Rotation {\n        return new Rotation(\n            Shape.fromMatrix(matrix),\n            Shape.fromMatrix(rotateMatrix90(matrix)),\n            Shape.fromMatrix(rotateMatrix180(matrix)),\n            Shape.fromMatrix(rotateMatrix270(matrix)),\n        )\n    }\n}\n","import {Direction, Mino} from \"./mino\";\nimport {Position} from \"./potision\";\nimport {Shape} from \"./shape\";\nimport {Color, Row} from \"./color\";\n\nexport class CurrentMino {\n\n    constructor(\n        readonly mino: Mino,\n        readonly position: Position,\n        readonly direction: Direction,\n    ) {}\n\n    public copy(): CurrentMino {\n        return new CurrentMino(this.mino, { row: this.position.row, col: this.position.col }, this.direction)\n    }\n\n    public getShape(): Shape {\n        return this.mino.getShape(this.direction)\n    }\n\n    public rotationRight(): CurrentMino {\n        if (this.direction === Direction.A) {\n            return new CurrentMino(this.mino, this.position, Direction.B)\n        } else if (this.direction === Direction.B) {\n            return new CurrentMino(this.mino, this.position, Direction.C)\n        } else if (this.direction === Direction.C) {\n            return new CurrentMino(this.mino, this.position, Direction.D)\n        } else if (this.direction === Direction.D) {\n            return new CurrentMino(this.mino, this.position, Direction.A)\n        }\n\n        throw Error('invalid direction found: ' + this.direction)\n    }\n\n    public rotationLeft(): CurrentMino {\n        if (this.direction === Direction.A) {\n            return new CurrentMino(this.mino, this.position, Direction.D)\n        } else if (this.direction === Direction.B) {\n            return new CurrentMino(this.mino, this.position, Direction.A)\n        } else if (this.direction === Direction.C) {\n            return new CurrentMino(this.mino, this.position, Direction.B)\n        } else if (this.direction === Direction.D) {\n            return new CurrentMino(this.mino, this.position, Direction.C)\n        }\n\n        throw Error('invalid direction found: ' + this.direction)\n    }\n\n    public moveRight(): CurrentMino {\n        return this.move({ row: this.position.row, col: this.position.col + 1 })\n    }\n\n    public moveLeft(): CurrentMino {\n        return this.move({ row: this.position.row, col: this.position.col - 1 })\n    }\n\n    public moveDown(): CurrentMino {\n        return this.move({ row: this.position.row + 1, col: this.position.col })\n    }\n\n    private move(position: Position): CurrentMino {\n        return new CurrentMino(this.mino, position, this.direction)\n    }\n\n    public rightCol(): number {\n        return this.position.col + this.getShape().rightCol()\n    }\n\n    public leftCol(): number {\n        return this.position.col + this.getShape().leftCol()\n    }\n\n    public bottomRow(): number {\n        return this.position.row + this.getShape().bottomRow()\n    }\n\n    public cellPositions(): Position[] {\n        return this.getShape().positions.map(position => {\n            return {\n                row: position.row + this.position.row,\n                col: position.col + this.position.col,\n            }\n        })\n    }\n\n    public collided(rows: Row[]): boolean {\n        return this.cellPositions().find(p => {\n            return rows[p.row][p.col] !== Color.None\n        }) !== undefined\n    }\n}\n","import {Direction, Mino, minoFactory} from \"./mino\";\nimport {Color, createEmptyRow, isFilled, Row, toGhost} from \"./color\";\nimport {Command} from \"./command\";\nimport {CurrentMino} from \"./CurrentMino\";\nimport {Random} from \"./random\";\n\nexport type GameState = {\n    rows: Row[]\n}\n\nexport class Game {\n\n    private static ncol = 10\n    private static nrow = 20\n\n    constructor(\n        private currentMino: CurrentMino,\n        private rows: Row[],\n        // TODO MinoPool 型にする\n        private nextMinos: Mino[],\n        private random: Random\n    ) {}\n\n    static create(): Game {\n        const random = new Random(Math.random() * 1000000)\n        const rows = Array(this.nrow)\n            .fill(0)\n            .map(_ => Array(this.ncol).fill(Color.None))\n        const minoSets = minoFactory.createMinoSets(random.nextRandom())\n        const currentMino = new CurrentMino(minoSets[0], { row: 0, col: 3 }, Direction.A)\n        const nextMinos = minoSets.slice(1, minoSets.length)\n\n        return new Game(currentMino, rows, nextMinos, random)\n    }\n\n    get state(): GameState {\n        // 地形をコピー\n        const rows = this.rows.map(row => row.map(cell => cell))\n\n        // ゴーストブロックの表示\n        const ghost = this.drop()\n        ghost.getShape().positions.forEach(position => {\n            rows[ghost.position.row + position.row][ghost.position.col + position.col] = toGhost(this.currentMino.mino.color)\n        })\n\n        // 現在のミノを表示\n        this.currentMino.getShape().positions.forEach(position => {\n            rows[this.currentMino.position.row + position.row][this.currentMino.position.col + position.col] = this.currentMino.mino.color\n        })\n\n        return { rows }\n    }\n\n    public input(command: Command): Game {\n        if (command === Command.Up) {\n            // mino を一番下まで落とす\n            const droppedMino = this.drop()\n            const newGame = new Game(droppedMino, this.rows, this.nextMinos, this.random)\n\n            // rows を state().rows に置き換え（接地）\n            const rows = newGame.state.rows\n\n            // 揃ったラインを消す\n            const clearedRows = this.clearRows(rows, Game.ncol)\n\n            // 次のミノに切り替え\n            const currentMino = new CurrentMino(this.nextMinos[0], { row: 0, col: 3 }, Direction.A)\n            const nextMinos = (this.nextMinos.length <= 5) ?\n                [...this.nextMinos.slice(1, this.nextMinos.length), ...minoFactory.createMinoSets(this.random.nextRandom())] :\n                this.nextMinos.slice(1, this.nextMinos.length)\n            return new Game(currentMino, clearedRows, nextMinos, this.random)\n        } else if (command === Command.Right) {\n            // TODO this.moveRight を currentMino に持たせる\n            return this.updateCurrentMino(this.moveRight())\n        } else if (command === Command.Down) {\n            return this.updateCurrentMino(this.moveDown())\n        } else if (command === Command.Left) {\n            return this.updateCurrentMino(this.moveLeft())\n        } else if (command === Command.RotationLeft) {\n            return this.updateCurrentMino(this.currentMino.rotationLeft())\n        } else if (command === Command.RotationRight) {\n            return this.updateCurrentMino(this.currentMino.rotationRight())\n        } else {\n            throw Error(\"no command found\")\n        }\n    }\n\n    private updateCurrentMino(currentMino: CurrentMino): Game {\n        return new Game(currentMino, this.rows, this.nextMinos, this.random)\n    }\n\n    private moveRight(): CurrentMino {\n        const nextMino = this.currentMino.moveRight()\n\n        if (nextMino.rightCol() >= Game.ncol) {\n            return this.currentMino\n        }\n\n        if (nextMino.collided(this.rows)) {\n            return this.currentMino\n        }\n\n        return nextMino\n    }\n\n    private moveLeft(): CurrentMino {\n        const nextMino = this.currentMino.moveLeft()\n\n        if (nextMino.leftCol() < 0) {\n            return this.currentMino\n        }\n\n        if(nextMino.collided(this.rows)) {\n            return this.currentMino\n        }\n\n        return nextMino\n    }\n\n    private moveDown(): CurrentMino {\n        const nextMino = this.currentMino.moveDown()\n\n        if (nextMino.bottomRow() >= Game.nrow) {\n            return this.currentMino\n        }\n\n        if(nextMino.collided(this.rows)) {\n            return this.currentMino\n        }\n\n        return nextMino\n    }\n\n    private drop(): CurrentMino {\n        let m = this.currentMino.copy()\n        while (true) {\n            const nextMino = m.moveDown()\n\n            if (nextMino.bottomRow() >= Game.nrow) {\n                break\n            }\n\n            if(nextMino.collided(this.rows)) {\n                break\n            }\n\n            m = nextMino\n        }\n        return m\n    }\n\n    private clearRows(rows: Row[], ncol: number): Row[] {\n        const clearingAmount = rows.filter(row => isFilled(row)).length\n        if (clearingAmount === 0) {\n            return rows\n        }\n\n        const remainedRows = rows.filter(row => !isFilled(row))\n        const emptyRows = Array(clearingAmount).fill(0).map(_ => createEmptyRow(ncol))\n        return [...emptyRows, ...remainedRows]\n    }\n}\n","import {atom, selector} from \"recoil\";\nimport {Game} from \"./game/game\";\n\nexport const game = atom<Game>({\n    key: \"game\",\n    default: Game.create(),\n})\n\nexport const boardSelector = selector({\n    key: 'board',\n    get: ({get}) => get(game).state\n})\n","/** @jsxImportSource @emotion/react */\n\nimport React from 'react';\nimport {css} from \"@emotion/react\";\nimport CellC from \"./cell/CellC\";\nimport {useRecoilValue} from \"recoil\";\nimport {boardSelector} from \"../../gameState\";\n\nconst style = {\n    board: css({\n        border: '1px solid grey',\n        display: 'inline-block',\n    }),\n    row: css({\n        display: 'flex'\n    })\n}\n\nexport default function Board() {\n    const board = useRecoilValue(boardSelector)\n\n    return (\n        <div css={style.board}>\n            { board.rows.map((row, index) => (\n                <div css={style.row} key={index}>\n                    { row.map((cell, index) => (\n                        <div className=\"row__cells\" key={index}>\n                            <CellC color={cell}/>\n                        </div>\n                    )) }\n                </div>\n            )) }\n        </div>\n    )\n}\n","import React from 'react';\nimport './RotationKeys.scss';\nimport {Command} from \"../../game/command\";\nimport {useSetRecoilState} from \"recoil\";\nimport {game} from \"../../gameState\";\n\nexport default function RotationKeys() {\n    // eslint-disable-next-line\n    const setGame = useSetRecoilState(game)\n\n    return (\n        <div className=\"rotationKeys\">\n            <div className=\"rotationKeys__right\">\n                <button\n                    type=\"button\"\n                    onClick={() => { setGame(game => game.input(Command.RotationRight)) }}\n                >R</button>\n            </div>\n            <div className=\"rotationKeys__left\">\n                <button\n                    type=\"button\"\n                    onClick={() => { setGame(game => game.input(Command.RotationLeft)) }}\n                >L</button>\n            </div>\n        </div>\n    )\n}\n","import {useEffect, useRef, useState} from \"react\";\nimport {Command} from \"../game/command\";\nimport {useSetRecoilState} from \"recoil\";\nimport {game} from \"../gameState\";\n\nexport const useCommandPressed = (command: Command) => {\n    // eslint-disable-next-line\n    const setGame = useSetRecoilState(game)\n    const [pressed, setPressed] = useState(false)\n    let intervalRef: any = useRef(null)\n    let timeoutRef: any = useRef(null)\n\n    useEffect(() => {\n        if (pressed) {\n            setGame(game => game.input(command))\n            timeoutRef.current = setTimeout(() => {\n                intervalRef.current = setInterval(() => {\n                    setGame(game => game.input(command))\n                }, 120)\n            }, 300)\n        } else {\n            if (intervalRef !== null) {\n                clearInterval(intervalRef.current)\n            }\n            if (timeoutRef !== null) {\n                clearTimeout(timeoutRef.current)\n            }\n        }\n        // eslint-disable-next-line\n    }, [pressed])\n\n    return setPressed\n}\n","import {useCallback, useEffect, useRef, useState} from \"react\";\nimport {Command} from \"../game/command\";\nimport {useSetRecoilState} from \"recoil\";\nimport {game} from \"../gameState\";\n\nexport const useLongPressDesktop = (command: Command) => {\n    // eslint-disable-next-line\n    const setGame = useSetRecoilState(game)\n    const [pressed, setPressed] = useState(false)\n    let intervalRef: any = useRef(null)\n    let timeoutRef: any = useRef(null)\n\n    useEffect(() => {\n        if (pressed) {\n            setGame(game => game.input(command))\n            timeoutRef.current = setTimeout(() => {\n                intervalRef.current = setInterval(() => {\n                    setGame(game => game.input(command))\n                }, 120)\n            }, 300)\n        } else {\n            if (intervalRef !== null) {\n                clearInterval(intervalRef.current)\n            }\n            if (timeoutRef !== null) {\n                clearTimeout(timeoutRef.current)\n            }\n        }\n        // eslint-disable-next-line\n    }, [pressed])\n\n    return setPressed\n}\n\nexport const useLongPressMobile = (command: Command) => {\n\n    // eslint-disable-next-line\n    const setGame = useSetRecoilState(game)\n    let intervalRef: any = useRef(null)\n    let timeoutRef: any = useRef(null)\n\n    return useCallback(target => {\n        target.addEventListener('touchstart', (e: any) => {\n            e.preventDefault()\n\n            setGame(game => game.input(command))\n\n            timeoutRef.current = setTimeout(() => {\n                intervalRef.current = setInterval(() => {\n                    setGame(game => game.input(command))\n                }, 120)\n            }, 300)\n        }, {passive: false})\n\n        target.addEventListener('touchend', (e: any) => {\n            e.preventDefault()\n\n            if (intervalRef !== null) {\n                clearInterval(intervalRef.current)\n            }\n            if (timeoutRef !== null) {\n                clearTimeout(timeoutRef.current)\n            }\n        }, {passive: false})\n        // eslint-disable-next-line\n    }, [])\n}\n","import React from 'react';\nimport './CrossKeys.scss';\nimport {Command} from \"../../game/command\";\nimport {useCommandPressed} from \"../../hooks/useCommandPressed\";\nimport { useLongPressMobile } from \"../../hooks/useLongPress\";\nimport { useMediaQuery } from 'react-responsive'\nimport {useSetRecoilState} from \"recoil\";\nimport {game} from \"../../gameState\";\n\nfunction CrossKeysDesktop() {\n    // eslint-disable-next-line\n    const setGame = useSetRecoilState(game)\n    const setDownPressed = useCommandPressed(Command.Down)\n    const setLeftPressed = useCommandPressed(Command.Left)\n    const setRightPressed = useCommandPressed(Command.Right)\n\n    return (\n        <div className=\"crossKeys\">\n            <div\n                className=\"crossKeys__up crossKey\"\n                onClick={() => { setGame((game) => game.input(Command.Up)) }}\n            >\n            </div>\n            <div\n                className=\"crossKeys__left crossKey\"\n                onMouseDown={ () => setLeftPressed(true) }\n                onMouseUp={ () => setLeftPressed(false ) }\n            >\n            </div>\n            <div\n                className=\"crossKeys__right crossKey\"\n                onMouseDown={ () => setRightPressed(true) }\n                onMouseUp={ () => setRightPressed(false ) }\n            >\n            </div>\n            <div\n                className=\"crossKeys__down crossKey\"\n                onMouseDown={ () => setDownPressed(true) }\n                onMouseUp={ () => setDownPressed(false ) }\n            >\n            </div>\n        </div>\n    )\n}\n\nfunction CrossKeysMobile() {\n    // eslint-disable-next-line\n    const setGame = useSetRecoilState(game)\n    const downRef = useLongPressMobile(Command.Down)\n    const leftRef = useLongPressMobile(Command.Left)\n    const rightRef = useLongPressMobile(Command.Right)\n\n    return (\n        <div className=\"crossKeys\">\n            <div\n                className=\"crossKeys__up crossKey\"\n                onClick={() => { setGame((game) => game.input(Command.Up)) }}\n            >\n            </div>\n            <div\n                className=\"crossKeys__left crossKey\"\n                ref={leftRef}\n            >\n            </div>\n            <div\n                className=\"crossKeys__right crossKey\"\n                ref={rightRef}\n            >\n            </div>\n            <div\n                className=\"crossKeys__down crossKey\"\n                ref={downRef}\n            >\n            </div>\n        </div>\n    )\n}\n\nexport default function CrossKeys() {\n    const isDesktop = useMediaQuery({ query: '(min-width: 768px)' })\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' })\n\n    return (\n        <>\n            { isDesktop && <CrossKeysDesktop/> }\n            { isMobile && <CrossKeysMobile/>}\n        </>\n    )\n}\n","/** @jsxImportSource @emotion/react */\n\nimport React from 'react';\nimport {css} from \"@emotion/react\";\nimport Board from \"./board/Board\";\nimport RotationKeys from \"./rotation-keys/RotationKeys\";\nimport CrossKeys from \"./cross-keys/CrossKeys\";\n\nconst style = {\n    controller: css({\n        display: 'flex'\n    }),\n    crossKeys: css({\n        width: 1200\n    })\n}\n\nexport function Layout() {\n    return (\n        <div>\n            <div>\n                <Board/>\n            </div>\n            <div css={style.controller}>\n                <div>\n                    <CrossKeys/>\n                </div>\n                <div>\n                    <RotationKeys/>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {useKeyDown} from \"./hooks/useKeyDown\";\nimport {Command} from \"./game/command\";\nimport {Layout} from \"./components/Layout\";\nimport {useSetRecoilState} from \"recoil\";\nimport {game} from \"./gameState\";\n\nconst key = {\n    down: 'ArrowDown',\n    up: 'ArrowUp',\n    right: 'ArrowRight',\n    left: 'ArrowLeft',\n    z: 'z',\n    x: 'x',\n}\n\nfunction App() {\n    const setGame = useSetRecoilState(game)\n    useKeyDown([\n        { key: key.down,  f: () => { setGame( (game) => game.input(Command.Down)) } },\n        { key: key.up,  f: () => { setGame( (game) => game.input(Command.Up)) } },\n        { key: key.right,  f: () => { setGame((game) => game.input(Command.Right)) } },\n        { key: key.left,  f: () => { setGame((game) => game.input(Command.Left)) } },\n        { key: key.z,  f: () => { setGame((game) => game.input(Command.RotationLeft)) } },\n        { key: key.x,  f: () => { setGame((game) => game.input(Command.RotationRight)) } },\n    ])\n\n    return (\n        <Layout/>\n    );\n}\n\nexport default App;\n","import {useEffect} from \"react\";\n\ntype KeyF = {\n    key: string,\n    f: () => void\n}\n\nexport function useKeyDown(keyFs: KeyF[]) {\n    useEffect(() => {\n        document.addEventListener(\"keydown\", e => {\n            const keyF = keyFs.find(keyF => keyF.key === e.key)\n            if (keyF) {\n                keyF.f()\n            }\n\n        }, false);\n        // eslint-disable-next-line\n    }, [])\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {RecoilRoot} from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <RecoilRoot>\n          <App />\n      </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}