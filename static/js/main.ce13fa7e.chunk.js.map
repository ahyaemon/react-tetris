{"version":3,"sources":["gameContext.ts","components/screen/screen-left/board/row/cell/CellC.tsx","components/screen/screen-left/board/row/Row.tsx","components/screen/screen-left/board/Board.tsx","components/screen/screen-left/ScreenLeft.tsx","components/screen/screen-right/ScreenRight.tsx","components/screen/Screen.tsx","components/controller/controller-left/ControllerLeft.tsx","game/command.ts","hooks/useCommandPressed.ts","hooks/useLongPress.ts","components/controller/controller-right/cross-keys/CrossKeys.tsx","components/controller/controller-right/rotation-keys/RotationKeys.tsx","components/controller/controller-right/ControllerRight.tsx","components/controller/Controller.tsx","game/color.ts","game/lib/matrix.ts","game/mino.ts","game/shape.ts","game/rotation.ts","game/random.ts","game/CurrentMino.ts","game/game.ts","App.tsx","hooks/useKeyDown.ts","reportWebVitals.ts","index.tsx"],"names":["GameContext","createContext","CellC","color","className","Row","cells","map","cell","index","Board","gameState","useContext","rows","row","ScreenLeft","ScreenRight","Screen","ControllerLeft","Command","useCommandPressed","command","setGameState","useState","pressed","setPressed","intervalRef","useRef","timeoutRef","useEffect","game","input","current","setTimeout","setInterval","clearInterval","clearTimeout","useLongPressMobile","useCallback","target","addEventListener","e","preventDefault","passive","CrossKeysDesktop","setDownPressed","Down","setLeftPressed","Left","setRightPressed","Right","onClick","Up","onMouseDown","onMouseUp","CrossKeysMobile","downRef","leftRef","rightRef","ref","CrossKeys","isDesktop","useMediaQuery","query","isMobile","RotationKeys","type","RotationRight","RotationLeft","ControllerRight","Controller","Color","MinoType","rotateMatrix90","a","_","c","r","reverse","rotateMatrix180","Shape","positions","rightCol","Math","max","p","col","leftCol","min","bottomRow","matrix","flatMap","bs","irow","b","icol","position","filter","Rotation","d","fromMatrix","Direction","rotations","i","o","t","s","z","l","j","Mino","minoType","rotation","direction","A","this","B","C","D","Error","minoFactory","I","LightBlue","O","Yellow","T","Purple","S","Green","Z","Red","L","Orange","J","Blue","random","floor","CurrentMino","mino","getShape","move","undefined","cellPositions","find","None","Game","currentMino","ghost","drop","forEach","LightBlueGhost","YellowGhost","PurpleGhost","GreenGhost","RedGhost","OrangeGhost","BlueGhost","state","moveRight","moveDown","moveLeft","rotationLeft","rotationRight","nextMino","ncol","collided","nrow","m","copy","Array","fill","key","create","App","keyFs","f","document","keyF","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce13fa7e.chunk.js","sourcesContent":["import {createContext} from \"react\";\nimport {GameState} from \"./game/game\";\n\n\ntype GameContextType = {\n    gameState: GameState\n    setGameState: (gameState: GameState) => void\n}\n\nconst GameContext = createContext({} as GameContextType)\n\nexport default GameContext\n","import React from 'react';\nimport './Cell.scss';\nimport {Color} from \"../../../../../../game/color\";\n\ntype CellProps = {\n    color: Color\n}\n\nexport default function CellC({ color }: CellProps) {\n    return (\n        <div className={`cell cell--${color}`}>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport './Row.scss';\nimport CellC from \"./cell/CellC\";\nimport {Cell} from \"../../../../../game/color\";\n\ntype RowProps = {\n    cells: Cell[]\n}\n\nexport default function Row({ cells }: RowProps) {\n    return (\n        <div className=\"row\">\n            { cells.map((cell, index) => (\n                <div className=\"row__cells\" key={index}>\n                    <CellC color={cell}/>\n                </div>\n            )) }\n        </div>\n    )\n}\n","import React, {useContext} from 'react';\nimport './Board.scss';\nimport GameContext from \"../../../../gameContext\";\nimport Row from \"./row/Row\";\n\nexport default function Board() {\n    const { gameState } = useContext(GameContext)\n\n    return (\n        <div className=\"board\">\n            { gameState.rows.map((row, index) => (\n                <div className=\"board__row\" key={index}>\n                    <Row cells={row}/>\n                </div>\n            )) }\n        </div>\n    )\n}\n","import React from 'react';\nimport './ScreenLeft.scss';\nimport Board from \"./board/Board\";\n\nexport default function ScreenLeft() {\n    return (\n        <div className=\"screenLeft\">\n            <div className=\"screenLeft__board\">\n                <Board/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './ScreenRight.scss';\n\nexport default function ScreenRight() {\n    return (\n        <div className=\"screenRight\">\n            <div className=\"screenRight__afterNext\">\n                afterNext\n            </div>\n            <div className=\"screenRight__hold\">\n                hold\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './Screen.scss';\nimport ScreenLeft from \"./screen-left/ScreenLeft\";\nimport ScreenRight from \"./screen-right/ScreenRight\";\n\nexport default function Screen() {\n    return (\n        <div className=\"screen\">\n            <div className=\"screen__left\">\n                <ScreenLeft/>\n            </div>\n            <div className=\"screen__right\">\n                <ScreenRight/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './ControllerLeft.scss';\n\nexport default function ControllerLeft() {\n    return (\n        <div className=\"controllerLeft\">\n            <p>pm/am</p>\n            <p>p/a</p>\n        </div>\n    )\n}\n","export enum Command {\n    Up,\n    Right,\n    Down,\n    Left,\n    RotationLeft,\n    RotationRight,\n}\n","import {useContext, useEffect, useRef, useState} from \"react\";\nimport GameContext from \"../gameContext\";\nimport {Command} from \"../game/command\";\nimport {game} from \"../App\";\n\nexport const useCommandPressed = (command: Command) => {\n    // eslint-disable-next-line\n    const { gameState, setGameState } = useContext(GameContext)\n\n    const [pressed, setPressed] = useState(false)\n    let intervalRef: any = useRef(null)\n    let timeoutRef: any = useRef(null)\n\n    useEffect(() => {\n        if (pressed) {\n            setGameState(game.input(command))\n            timeoutRef.current = setTimeout(() => {\n                intervalRef.current = setInterval(() => {\n                    setGameState(game.input(command))\n                }, 120)\n            }, 300)\n        } else {\n            if (intervalRef !== null) {\n                clearInterval(intervalRef.current)\n            }\n            if (timeoutRef !== null) {\n                clearTimeout(timeoutRef.current)\n            }\n        }\n        // eslint-disable-next-line\n    }, [pressed])\n\n    return setPressed\n}\n","import {useCallback, useContext, useEffect, useRef, useState} from \"react\";\nimport GameContext from \"../gameContext\";\nimport {Command} from \"../game/command\";\nimport {game} from \"../App\";\n\nexport const useLongPressDesktop = (command: Command) => {\n    // eslint-disable-next-line\n    const { gameState, setGameState } = useContext(GameContext)\n\n    const [pressed, setPressed] = useState(false)\n    let intervalRef: any = useRef(null)\n    let timeoutRef: any = useRef(null)\n\n    useEffect(() => {\n        if (pressed) {\n            setGameState(game.input(command))\n            timeoutRef.current = setTimeout(() => {\n                intervalRef.current = setInterval(() => {\n                    setGameState(game.input(command))\n                }, 120)\n            }, 300)\n        } else {\n            if (intervalRef !== null) {\n                clearInterval(intervalRef.current)\n            }\n            if (timeoutRef !== null) {\n                clearTimeout(timeoutRef.current)\n            }\n        }\n        // eslint-disable-next-line\n    }, [pressed])\n\n    return setPressed\n}\n\nexport const useLongPressMobile = (command: Command) => {\n\n    // eslint-disable-next-line\n    const { gameState, setGameState } = useContext(GameContext)\n\n    let intervalRef: any = useRef(null)\n\n    let timeoutRef: any = useRef(null)\n\n    const tagRef = useCallback(target => {\n        target.addEventListener('touchstart', (e: any) => {\n            e.preventDefault()\n\n            setGameState(game.input(command))\n\n            timeoutRef.current = setTimeout(() => {\n                intervalRef.current = setInterval(() => {\n                    setGameState(game.input(command))\n                }, 120)\n            }, 300)\n        }, { passive: false })\n\n        target.addEventListener('touchend', (e: any) => {\n            e.preventDefault()\n\n            if (intervalRef !== null) {\n                clearInterval(intervalRef.current)\n            }\n            if (timeoutRef !== null) {\n                clearTimeout(timeoutRef.current)\n            }\n        }, { passive: false })\n        // eslint-disable-next-line\n    }, [])\n\n    return tagRef\n}\n","import React, {useContext} from 'react';\nimport './CrossKeys.scss';\nimport GameContext from \"../../../../gameContext\";\nimport {game} from \"../../../../App\";\nimport {Command} from \"../../../../game/command\";\nimport {useCommandPressed} from \"../../../../hooks/useCommandPressed\";\nimport { useLongPressMobile } from \"../../../../hooks/useLongPress\";\nimport { useMediaQuery } from 'react-responsive'\n\nfunction CrossKeysDesktop() {\n    // eslint-disable-next-line\n    const { gameState, setGameState } = useContext(GameContext)\n    const setDownPressed = useCommandPressed(Command.Down)\n    const setLeftPressed = useCommandPressed(Command.Left)\n    const setRightPressed = useCommandPressed(Command.Right)\n\n    return (\n        <div className=\"crossKeys\">\n            <div\n                className=\"crossKeys__up crossKey\"\n                onClick={() => { setGameState(game.input(Command.Up)) }}\n            >\n            </div>\n            <div\n                className=\"crossKeys__left crossKey\"\n                onMouseDown={ () => setLeftPressed(true) }\n                onMouseUp={ () => setLeftPressed(false ) }\n            >\n            </div>\n            <div\n                className=\"crossKeys__right crossKey\"\n                onMouseDown={ () => setRightPressed(true) }\n                onMouseUp={ () => setRightPressed(false ) }\n            >\n            </div>\n            <div\n                className=\"crossKeys__down crossKey\"\n                onMouseDown={ () => setDownPressed(true) }\n                onMouseUp={ () => setDownPressed(false ) }\n            >\n            </div>\n        </div>\n    )\n}\n\nfunction CrossKeysMobile() {\n    // eslint-disable-next-line\n    const { gameState, setGameState } = useContext(GameContext)\n    const downRef = useLongPressMobile(Command.Down)\n    const leftRef = useLongPressMobile(Command.Left)\n    const rightRef = useLongPressMobile(Command.Right)\n\n    return (\n        <div className=\"crossKeys\">\n            <div\n                className=\"crossKeys__up crossKey\"\n                onClick={() => { setGameState(game.input(Command.Up)) }}\n            >\n            </div>\n            <div\n                className=\"crossKeys__left crossKey\"\n                ref={leftRef}\n            >\n            </div>\n            <div\n                className=\"crossKeys__right crossKey\"\n                ref={rightRef}\n            >\n            </div>\n            <div\n                className=\"crossKeys__down crossKey\"\n                ref={downRef}\n            >\n            </div>\n        </div>\n    )\n}\n\nexport default function CrossKeys() {\n    const isDesktop = useMediaQuery({ query: '(min-width: 768px)' })\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' })\n\n    return (\n        <>\n            { isDesktop && <CrossKeysDesktop/> }\n            { isMobile && <CrossKeysMobile/>}\n        </>\n    )\n}\n","import React, {useContext} from 'react';\nimport './RotationKeys.scss';\nimport GameContext from \"../../../../gameContext\";\nimport {game} from \"../../../../App\";\nimport {Command} from \"../../../../game/command\";\n\nexport default function RotationKeys() {\n    // eslint-disable-next-line\n    const { gameState, setGameState } = useContext(GameContext)\n\n    return (\n        <div className=\"rotationKeys\">\n            <div className=\"rotationKeys__right\">\n                <button\n                    type=\"button\"\n                    onClick={() => { setGameState(game.input(Command.RotationRight)) }}\n                >R</button>\n            </div>\n            <div className=\"rotationKeys__left\">\n                <button\n                    type=\"button\"\n                    onClick={() => { setGameState(game.input(Command.RotationLeft)) }}\n                >L</button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './ControllerRight.scss';\nimport CrossKeys from \"./cross-keys/CrossKeys\";\nimport RotationKeys from \"./rotation-keys/RotationKeys\";\n\nexport default function ControllerRight() {\n    return (\n        <div className=\"controllerRight\">\n            <div className=\"controllerRight__rotationKeys\">\n                <RotationKeys/>\n            </div>\n            <div className=\"controllerRight__crossKeys\">\n                <CrossKeys/>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './Controller.scss';\nimport ControllerLeft from \"./controller-left/ControllerLeft\";\nimport ControllerRight from \"./controller-right/ControllerRight\";\n\nexport default function Controller() {\n    return (\n        <div className=\"controller\">\n            <div className=\"controller__left\">\n                <ControllerLeft/>\n            </div>\n            <div className=\"controller__right\">\n                <ControllerRight/>\n            </div>\n        </div>\n    )\n}\n","export enum Color {\n    None = 'none',\n\n    LightBlue = 'lightBlue',\n    Yellow = 'yellow',\n    Purple = 'purple',\n    Green = 'green',\n    Red = 'red',\n    Orange = 'orange',\n    Blue = 'blue',\n\n    LightBlueGhost = 'lightBlue--ghost',\n    YellowGhost = 'yellow--ghost',\n    PurpleGhost = 'purple--ghost',\n    GreenGhost = 'green--ghost',\n    RedGhost = 'red--ghost',\n    OrangeGhost = 'orange--ghost',\n    BlueGhost = 'blue--ghost',\n}\n\nexport function toGhost(color: Color): Color {\n    if (color === Color.LightBlue) {\n        return Color.LightBlueGhost\n    } else if (color === Color.Yellow) {\n        return Color.YellowGhost\n    } else if (color === Color.Purple) {\n        return Color.PurpleGhost\n    } else if (color === Color.Green) {\n        return Color.GreenGhost\n    } else if (color === Color.Red){\n        return Color.RedGhost\n    } else if (color === Color.Orange) {\n        return Color.OrangeGhost\n    } else if (color === Color.Blue) {\n        return Color.BlueGhost\n    }\n\n    return Color.None\n}\n\nexport type Cell = Color\n\nexport type Row = Cell[]\n","export const rotateMatrixLeft = (a: boolean[][]): boolean[][] => a[0].map((_, c) => a.map(r => r[c])).reverse();\nexport const rotateMatrix90 = <T>(a: T[][]): T[][] => a[0].map((_, c) => a.map(r => r[c]).reverse());\nexport const rotateMatrix180 = <T>(a: T[][]): T[][] => rotateMatrix90(rotateMatrix90(a))\nexport const rotateMatrix270 = <T>(a: T[][]): T[][] => rotateMatrix180(rotateMatrix90(a))\n","import {getRandomInt} from \"./random\";\nimport {Color} from \"./color\";\nimport {Rotation} from \"./rotation\";\nimport {Shape} from \"./shape\";\n\nenum MinoType {\n    I,\n    O,\n    T,\n    S,\n    Z,\n    L,\n    J,\n}\n\nconst rotations = {\n    i: Rotation.fromMatrix([\n        [false, false, false, false],\n        [true, true, true, true],\n        [false, false, false, false],\n        [false, false, false, false],\n    ]),\n    o: Rotation.fromMatrix([\n        [true, true],\n        [true, true],\n    ]),\n    t: Rotation.fromMatrix([\n        [false, true, false],\n        [true, true, true],\n        [false, false, false],\n    ]),\n    s: Rotation.fromMatrix([\n        [false, true, true],\n        [true, true, false],\n        [false, false, false],\n    ]),\n    z: Rotation.fromMatrix([\n        [true, true, false],\n        [false, true, true],\n        [false, false, false],\n    ]),\n    l: Rotation.fromMatrix([\n        [false, false, true],\n        [true, true, true],\n        [false, false, false],\n    ]),\n    j: Rotation.fromMatrix([\n        [true, false, false],\n        [true, true, true],\n        [false, false, false],\n    ]),\n}\n\nexport enum Direction {\n    A,\n    B,\n    C,\n    D\n}\n\nexport class Mino {\n\n    constructor(\n        readonly minoType: MinoType,\n        readonly rotation: Rotation,\n        readonly color: Color,\n    ) {}\n\n    public getShape(direction: Direction): Shape {\n        if (direction === Direction.A) {\n            return this.rotation.a\n        } else if (direction === Direction.B) {\n            return this.rotation.b\n        } else if (direction === Direction.C) {\n            return this.rotation.c\n        } else if (direction === Direction.D) {\n            return this.rotation.d\n        }\n        throw Error(\"no direction found\")\n    }\n}\n\nexport const minoFactory = {\n    i(): Mino {\n        return new Mino(\n            MinoType.I,\n            rotations.i,\n            Color.LightBlue,\n        )\n    },\n    o(): Mino {\n        return new Mino(\n            MinoType.O,\n            rotations.o,\n            Color.Yellow,\n        )\n    },\n    t(): Mino {\n        return new Mino(\n            MinoType.T,\n            rotations.t,\n            Color.Purple,\n        )\n    },\n    s(): Mino {\n        return new Mino(\n            MinoType.S,\n            rotations.s,\n            Color.Green,\n        )\n    },\n    z(): Mino {\n        return new Mino(\n            MinoType.Z,\n            rotations.z,\n            Color.Red,\n        )\n    },\n    l(): Mino {\n        return new Mino(\n            MinoType.L,\n            rotations.l,\n            Color.Orange,\n        )\n    },\n    j(): Mino {\n        return new Mino(\n            MinoType.J,\n            rotations.j,\n            Color.Blue,\n        )\n    },\n    random(): Mino {\n        const rand =　getRandomInt(7)\n        switch (rand) {\n            case 0: return this.i()\n            case 1: return this.o()\n            case 2: return this.t()\n            case 3: return this.s()\n            case 4: return this.z()\n            case 5: return this.l()\n            case 6: return this.j()\n            default: throw Error(\"failed to create random mino\")\n        }\n    }\n}\n","import {Position} from \"./potision\";\n\nexport class Shape {\n    constructor(\n        readonly positions: Position[]\n    ) {\n    }\n\n    rightCol = (): number => Math.max(...this.positions.map(p => p.col))\n\n    leftCol = (): number => Math.min(...this.positions.map(p => p.col))\n\n    bottomRow = (): number => Math.max(...this.positions.map(p => p.row))\n\n    public static fromMatrix(matrix: boolean[][]): Shape {\n        return new Shape(\n            matrix.flatMap((bs, irow) => {\n                return bs.map((b, icol) => {\n                    return {b: b, position: {row: irow, col: icol}}\n                }).filter(b => b.b)\n            }).map(bs => bs.position)\n        )\n    }\n}\n","import {rotateMatrix180, rotateMatrix270, rotateMatrix90} from \"./lib/matrix\";\nimport {Shape} from \"./shape\";\n\nexport class Rotation {\n    constructor(\n        readonly a: Shape,\n        readonly b: Shape,\n        readonly c: Shape,\n        readonly d: Shape,\n    ) {\n    }\n\n    public static fromMatrix(matrix: boolean[][]): Rotation {\n        return new Rotation(\n            Shape.fromMatrix(matrix),\n            Shape.fromMatrix(rotateMatrix90(matrix)),\n            Shape.fromMatrix(rotateMatrix180(matrix)),\n            Shape.fromMatrix(rotateMatrix270(matrix)),\n        )\n    }\n}\n","export function getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n}\n","import {Direction, Mino} from \"./mino\";\nimport {Position} from \"./potision\";\nimport {Shape} from \"./shape\";\nimport {Color, Row} from \"./color\";\n\nexport class CurrentMino {\n\n    constructor(\n        readonly mino: Mino,\n        readonly position: Position,\n        readonly direction: Direction,\n    ) {}\n\n    public copy(): CurrentMino {\n        return new CurrentMino(this.mino, { row: this.position.row, col: this.position.col }, this.direction)\n    }\n\n    public getShape(): Shape {\n        return this.mino.getShape(this.direction)\n    }\n\n    public rotationRight(): CurrentMino {\n        if (this.direction === Direction.A) {\n            return new CurrentMino(this.mino, this.position, Direction.B)\n        } else if (this.direction === Direction.B) {\n            return new CurrentMino(this.mino, this.position, Direction.C)\n        } else if (this.direction === Direction.C) {\n            return new CurrentMino(this.mino, this.position, Direction.D)\n        } else if (this.direction === Direction.D) {\n            return new CurrentMino(this.mino, this.position, Direction.A)\n        }\n\n        throw Error('invalid direction found: ' + this.direction)\n    }\n\n    public rotationLeft(): CurrentMino {\n        if (this.direction === Direction.A) {\n            return new CurrentMino(this.mino, this.position, Direction.D)\n        } else if (this.direction === Direction.B) {\n            return new CurrentMino(this.mino, this.position, Direction.A)\n        } else if (this.direction === Direction.C) {\n            return new CurrentMino(this.mino, this.position, Direction.B)\n        } else if (this.direction === Direction.D) {\n            return new CurrentMino(this.mino, this.position, Direction.C)\n        }\n\n        throw Error('invalid direction found: ' + this.direction)\n    }\n\n    public moveRight(): CurrentMino {\n        return this.move({ row: this.position.row, col: this.position.col + 1 })\n    }\n\n    public moveLeft(): CurrentMino {\n        return this.move({ row: this.position.row, col: this.position.col - 1 })\n    }\n\n    public moveDown(): CurrentMino {\n        return this.move({ row: this.position.row + 1, col: this.position.col })\n    }\n\n    private move(position: Position): CurrentMino {\n        return new CurrentMino(this.mino, position, this.direction)\n    }\n\n    public rightCol(): number {\n        return this.position.col + this.getShape().rightCol()\n    }\n\n    public leftCol(): number {\n        return this.position.col + this.getShape().leftCol()\n    }\n\n    public bottomRow(): number {\n        return this.position.row + this.getShape().bottomRow()\n    }\n\n    public cellPositions(): Position[] {\n        return this.getShape().positions.map(position => {\n            return {\n                row: position.row + this.position.row,\n                col: position.col + this.position.col,\n            }\n        })\n    }\n\n    public collided(rows: Row[]): boolean {\n        return this.cellPositions().find(p => {\n            return rows[p.row][p.col] !== Color.None\n        }) !== undefined\n    }\n}\n","import {Direction, minoFactory} from \"./mino\";\nimport {Color, Row, toGhost} from \"./color\";\nimport {Command} from \"./command\";\nimport {CurrentMino} from \"./CurrentMino\";\n\nexport type GameState = {\n    rows: Row[]\n}\n\nexport class Game {\n\n    private static ncol = 10\n    private static nrow = 20\n\n    constructor(\n        private currentMino: CurrentMino,\n        private rows: Row[],\n    ) {}\n\n    static create(): Game {\n        const rows = Array(this.nrow)\n            .fill(0)\n            .map(_ => Array(this.ncol).fill(Color.None))\n        const currentMino = new CurrentMino(minoFactory.j(), { row: 0, col: 3 }, Direction.A)\n\n        return new Game(currentMino, rows)\n    }\n\n    get state(): GameState {\n        // 地形をコピー\n        const rows = this.rows.map(row => row.map(cell => cell))\n\n        // ゴーストブロックの表示\n        const ghost = this.drop()\n        ghost.getShape().positions.forEach(position => {\n            rows[ghost.position.row + position.row][ghost.position.col + position.col] = toGhost(this.currentMino.mino.color)\n        })\n\n        // 現在のミノを表示\n        this.currentMino.getShape().positions.forEach(position => {\n            rows[this.currentMino.position.row + position.row][this.currentMino.position.col + position.col] = this.currentMino.mino.color\n        })\n\n        return { rows }\n    }\n\n    public input(command: Command): GameState {\n        if (command === Command.Up) {\n            // mino を一番下まで落とす\n            this.currentMino = this.drop()\n\n            // rows を state().rows に置き換え（接地）\n            this.rows = this.state.rows\n\n            // 次のミノに切り替え\n            this.currentMino = new CurrentMino(minoFactory.random(), { row: 0, col: 3 }, Direction.A)\n        } else if (command === Command.Right) {\n            this.currentMino = this.moveRight()\n        } else if (command === Command.Down) {\n            this.currentMino = this.moveDown()\n        } else if (command === Command.Left) {\n            this.currentMino = this.moveLeft()\n        } else if (command === Command.RotationLeft) {\n            // TODO SRS の導入\n            this.currentMino = this.currentMino.rotationLeft()\n        } else if (command === Command.RotationRight) {\n            this.currentMino = this.currentMino.rotationRight()\n        }\n        return this.state\n    }\n\n    private moveRight(): CurrentMino {\n        const nextMino = this.currentMino.moveRight()\n\n        if (nextMino.rightCol() >= Game.ncol) {\n            return this.currentMino\n        }\n\n        if (nextMino.collided(this.rows)) {\n            return this.currentMino\n        }\n\n        return nextMino\n    }\n\n    private moveLeft(): CurrentMino {\n        const nextMino = this.currentMino.moveLeft()\n\n        if (nextMino.leftCol() < 0) {\n            return this.currentMino\n        }\n\n        if(nextMino.collided(this.rows)) {\n            return this.currentMino\n        }\n\n        return nextMino\n    }\n\n    private moveDown(): CurrentMino {\n        const nextMino = this.currentMino.moveDown()\n\n        if (nextMino.bottomRow() >= Game.nrow) {\n            return this.currentMino\n        }\n\n        if(nextMino.collided(this.rows)) {\n            return this.currentMino\n        }\n\n        return nextMino\n    }\n\n    private drop(): CurrentMino {\n        let m = this.currentMino.copy()\n        while (true) {\n            const nextMino = m.moveDown()\n\n            if (nextMino.bottomRow() >= Game.nrow) {\n                break\n            }\n\n            if(nextMino.collided(this.rows)) {\n                break\n            }\n\n            m = nextMino\n        }\n        return m\n    }\n}\n","import React, {useState} from 'react';\nimport './App.scss';\nimport Screen from \"./components/screen/Screen\";\nimport Controller from \"./components/controller/Controller\";\nimport GameContext from \"./gameContext\";\nimport {Game} from \"./game/game\";\nimport {useKeyDown} from \"./hooks/useKeyDown\";\nimport {Command} from \"./game/command\";\n\nconst key = {\n    down: 'ArrowDown',\n    up: 'ArrowUp',\n    right: 'ArrowRight',\n    left: 'ArrowLeft',\n    z: 'z',\n    x: 'x',\n}\n\nexport const game = Game.create()\n\nfunction App() {\n    const [gameState, setGameState] = useState(game.state)\n    useKeyDown([\n        { key: key.down,  f: () => { setGameState(game.input(Command.Down)) } },\n        { key: key.up,  f: () => { setGameState(game.input(Command.Up)) } },\n        { key: key.right,  f: () => { setGameState(game.input(Command.Right)) } },\n        { key: key.left,  f: () => { setGameState(game.input(Command.Left)) } },\n        { key: key.z,  f: () => { setGameState(game.input(Command.RotationLeft)) } },\n        { key: key.x,  f: () => { setGameState(game.input(Command.RotationRight)) } },\n    ])\n\n    return (\n        <GameContext.Provider value={{gameState, setGameState}}>\n            <div className=\"app\">\n                <div className=\"app__screen\">\n                    <Screen/>\n                </div>\n                <div className=\"app_controller\">\n                    <Controller/>\n                </div>\n            </div>\n        </GameContext.Provider>\n    );\n}\n\nexport default App;\n","import {useEffect} from \"react\";\n\ntype KeyF = {\n    key: string,\n    f: () => void\n}\n\nexport function useKeyDown(keyFs: KeyF[]) {\n    useEffect(() => {\n        document.addEventListener(\"keydown\", e => {\n            const keyF = keyFs.find(keyF => keyF.key === e.key)\n            if (keyF) {\n                keyF.f()\n            }\n\n        }, false);\n        // eslint-disable-next-line\n    }, [])\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}